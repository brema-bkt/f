{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","n2dpuller/settings.js","n2dpuller/nftpuller.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","key","nftContract","mainnet","NftPuller","useState","nfts","setNfts","loadingState","setLoadingState","window","location","reload","provider","ethers","providers","JsonRpcProvider","wallet","Wallet","contract","Contract","NFTCollection","itemArray","then","result","parseInt","i","token","owner","ownerOf","rawUri","tokenURI","Promise","resolve","value","cleanUri","replace","axios","get","catch","toJSON","rawImg","name","desc","description","meta","img","tokenId","push","r","setTimeout","useEffect","generateNft","length","md","h1","css","marginLeft","size","onPress","gap","map","nft","isHoverable","mw","marginRight","boxShadow","variant","Image","src","Body","background","color","h2","h3","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","StyledImg","StyledLink","App","input","len","useDispatch","useSelector","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","style","padding","backgroundColor","href","alt","borderRadius","border","textAlign","fontSize","fontWeight","target","substring","onClick","e","open","margin","Number","preventDefault","abiResponse","abi","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","once","err","receipt","claimNFTs","transform","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0461ec41.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","/* \r\n\r\n█▀▀▄ █▀▀ ▀▀█▀▀ █▀█ █▀▀▄ █▀▀ ▀█░█▀ \r\n█░░█ █▀▀ ░░█░░ ░▄▀ █░░█ █▀▀ ░█▄█░ \r\n▀░░▀ ▀▀▀ ░░▀░░ █▄▄ ▀▀▀░ ▀▀▀ ░░▀░░\r\n\r\n\r\n🅽🅵🆃🅿🆄🅻🅻🅴🆁 v1\r\nA React - NextJS NFT IPFS CID Metadata Puller\r\nWith NO Private API Required\r\n\r\nRequired Dependencies:\r\n\r\nnpm i ethers\r\nnpm i axios\r\nnpm i @nextui-org/react\r\n\r\nSubscribe and follow me to get more amazing content\r\nYoutube, Instagram, Tiktok : Net2Dev\r\nGithub @net2devcrypto\r\n\r\nPlease donate to: net2dev.eth\r\n\r\n*/\r\n\r\n    //Generic Wallet Key to make the call, not usable, DO NOT CHANGE.\r\n    export const key = '0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80' \r\n\r\n    //RPC Addresses, Change to any other if needed.\r\n    const eth = \"https://rpc.ankr.com/eth\"\r\n    const fsn = \"https://mainnet.fusionnetwork.io\"\r\n    const poly = \"https://matic-mainnet.chainstacklabs.com\"\r\n    const ethkovan = \"https://kovan.infura.io/v3/\"\r\n    const ethrinkeby = \"https://rinkeby.infura.io/v3/\"\r\n    const ethropsten = \"https://ropsten.infura.io/v3/\"\r\n    const bsctest = \"https://data-seed-prebsc-1-s3.binance.org:8545\"\r\n    const polytest = \"https://matic-mumbai.chainstacklabs.com\"\r\n\r\n\r\n/*\r\n█▀ █▀▀ ▀█▀ ▀█▀ █ █▄░█ █▀▀ █▀\r\n▄█ ██▄ ░█░ ░█░ █ █░▀█ █▄█ ▄█\r\n*/                                                            \r\n\r\n/*\r\n    Input the NFT Contract Address\r\n    */\r\n    export const nftContract = \"0xeb62ddd7887d83e7246c768b9896efda0d698449\"\r\n\r\n    /*\r\n    Select your mainnet\r\n    eth - bsc - poly\r\n    Or Select your testnet\r\n    ethkovan - ethrinkeby - ethropsten - bsctest - polytest\r\n    */\r\n    export var mainnet = fsn\r\n\r\n\r\n    /*\r\n    Type the amount of NFT's to display\r\n    */\r\n    export var displayAmount = 2\r\n\r\n    /*\r\n    CTRL+S to save\r\n    */","import { ethers } from 'ethers';\r\nimport { useEffect, useState } from 'react';\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\nimport NFTCollection from './NFTCollection.json';\r\nimport { Card, Container, Text, Grid, Button, Image } from '@nextui-org/react';\r\nimport { nftContract, key, displayAmount, mainnet } from './settings';\r\n\r\n\r\nexport default function NftPuller() {\r\n  const [nfts, setNfts] = useState([])\r\n  const [loadingState, setLoadingState] = useState('not-loaded')\r\n  useEffect(() => {\r\n    generateNft();\r\n    }, [setNfts])\r\n    \r\n    async function refreshPage() {\r\n        window.location.reload();\r\n    }\r\n    async function generateNft() {\r\n      const provider = new ethers.providers.JsonRpcProvider(mainnet)\r\n      const wallet = new ethers.Wallet(key, provider);\r\n      const contract = new ethers.Contract(nftContract, NFTCollection, wallet);\r\n      const itemArray = [];\r\n      contract.totalSupply().then(result => {\r\n        let totalSup = parseInt(result, 16)\r\n  \r\n        /*\r\n        Replace \"displayAmount\" with \"totalSup\"\r\n        below if you want to display all NFTs \r\n        in the collection BUT BE CAREFUL, it will render\r\n        every nft image and possibly freeze your server/browser!!\r\n        */\r\n        for (let i = 0; i < 10; i++) {\r\n\r\n\r\n          var token = i + 1                         \r\n          const owner = contract.ownerOf(token)\r\n          const rawUri = contract.tokenURI(token)\r\n          const Uri = Promise.resolve(rawUri)\r\n          const getUri = Uri.then(value => {\r\n            let str = value\r\n            let cleanUri = str.replace('ipfs://', 'https://ipfs.io/ipfs/')\r\n            let metadata = axios.get(cleanUri).catch(function (error) {\r\n              console.log(error.toJSON());\r\n            });\r\n            return metadata;\r\n          })\r\n          getUri.then(value => {\r\n            let rawImg = value.data.image\r\n            var name = value.data.name\r\n            var desc = value.data.description\r\n            let image = rawImg.replace('ipfs://', 'https://ipfs.io/ipfs/')\r\n            Promise.resolve(owner).then(value => {\r\n              let ownerW = value;\r\n              let meta = {\r\n                name: name,\r\n                img: image,\r\n                tokenId: token,\r\n                wallet: ownerW,\r\n                desc,\r\n              }\r\n              console.log(meta)\r\n              itemArray.push(meta)\r\n            })\r\n          })\r\n        }\r\n      })\r\n      await new Promise(r => setTimeout(r, 5000));\r\n      setNfts(itemArray)\r\n      setLoadingState('loaded');\r\n    }\r\n\r\nif (loadingState === 'loaded' && !nfts.length)\r\n\r\n    return (\r\n      <div >\r\n        {\r\n        nfts.map((nft, i) => {\r\n          <div>\r\n          <Card.Image src={nft.img} key={i}/>\r\n        <h2>No Collections Retrieved</h2>\r\n        </div>\r\n})}\r\n      </div>\r\n    )\r\n    return (\r\n      <Container md>\r\n        <Text h1 css={{marginLeft:'$10'}} size={'40px'}>NFT Collection</Text>\r\n        <Button css={{marginLeft: '$10'}} onPress={refreshPage}>Refresh NFTs</Button>\r\n      <Grid.Container gap={3}>\r\n        {nfts.map((nft, i) => {\r\n            return (\r\n              <Grid >\r\n                <a>\r\n                  <Card isHoverable key={i} css={{ mw: \"270px\", marginRight: '$1', boxShadow:'0px 2px 12px #000000' }} variant=\"bordered\">\r\n                    <Card.Image src={nft.img} />\r\n                    <Card.Body md css={{background:\"$gradient\"}}>\r\n                    <Text css={{color:'$white'}} h2>{nft.name}</Text>\r\n                    <Text h3 css={{color:'$white'}}>NFT ID: {nft.tokenId}</Text>\r\n                    <Text css={{color:'$white'}}>{nft.desc}</Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </a>\r\n              </Grid>\r\n            )\r\n          })}\r\n      </Grid.Container>\r\n    </Container>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport NftPuller from '../src/n2dpuller/nftpuller';\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 0px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 0%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 50) {\n      newMintAmount = 50;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <a href={CONFIG.MARKETPLACE_LINK}>\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        </a>\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"0px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <span\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <StyledButton\n                onClick={(e) => {\n                  window.open(\"/config/roadmap.pdf\", \"_blank\");\n                }}\n                style={{\n                  margin: \"5px\",\n                }}\n              >\n                Roadmap\n              </StyledButton>\n              <StyledButton\n                style={{\n                  margin: \"5px\",\n                }}\n                onClick={(e) => {\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\n                }}\n              >\n                {CONFIG.MARKETPLACE}\n              </StyledButton>\n            </span>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n        <NftPuller>\n        </NftPuller>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport Nftpuller from '../src/n2dpuller/nftpuller';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}